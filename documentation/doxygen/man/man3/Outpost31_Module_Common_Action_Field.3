.TH "Outpost31.Module.Common.Action.Field" 3 "Thu Jun 27 2024" "Outpost31" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Outpost31.Module.Common.Action.Field \- \fBField\fP operations\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBCompareValue\fP (string field01Value, string field02Value, \fBTraceLog\fP traceInfo)"
.br
.RI "Compare the values of two form field IDs to determine if they are the same\&. "
.ti -1c
.RI "static void \fBLock\fP (string fieldId)"
.br
.RI "Locks a field so that it cannot be edited\&. "
.ti -1c
.RI "static void \fBSaveValue\fP (string valueToSave, string filePath, \fBTraceLog\fP traceInfo)"
.br
.RI "Saves the value of a field to a file\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "static string \fBAssemblyName\fP = Assembly\&.GetExecutingAssembly()\&.GetName()\&.Name\fR [get, set]\fP"
.br
.RI "Assembly name for log files\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBField\fP operations\&. 
.SH "Member Function Documentation"
.PP 
.SS "static bool Outpost31\&.Module\&.Common\&.Action\&.Field\&.CompareValue (string field01Value, string field02Value, \fBTraceLog\fP traceInfo)\fR [static]\fP"

.PP
Compare the values of two form field IDs to determine if they are the same\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield01Value\fP The value of the first field\&.
.br
\fIfield02Value\fP The value of the second field\&.
.RE
.PP
.PP
To call FieldOperation\&.Compare(): 
.PP
.nf
var value1 = tnSession\&.AvComponents\&.SentOptionObject\&.GetFieldValue("10001")
var value2 = tnSession\&.AvComponents\&.SentOptionObject\&.GetFieldValue("10002");
Outpost31\&.Module\&.Common\&.FieldOperation\&.SaveValue(value1, value1);

.fi
.PP
 
.PP
\fBReturns\fP
.RS 4
True (the fields values are the same) or false(the field values are different)\&.
.RE
.PP

.SS "static void Outpost31\&.Module\&.Common\&.Action\&.Field\&.Lock (string fieldId)\fR [static]\fP"

.PP
Locks a field so that it cannot be edited\&. 
.PP
\fBParameters\fP
.RS 4
\fIfieldId\fP The field ID to be locked\&.
.RE
.PP

.SS "static void Outpost31\&.Module\&.Common\&.Action\&.Field\&.SaveValue (string valueToSave, string filePath, \fBTraceLog\fP traceInfo)\fR [static]\fP"

.PP
Saves the value of a field to a file\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalueToSave\fP The value to save\&.
.br
\fIfilePath\fP The file path\&.
.RE
.PP
.PP
To call FieldOperation\&.Compare(): 
.PP
.nf
var fieldValue = tnSession\&.AvComponents\&.SentOptionObject\&.GetFieldValue("10001")
var filePath = $@"{tnSession\&.TnFramework\&.TemporaryPath}\\{currentAvatarUser}\-%filename%\&.%extension%";
Outpost31\&.Module\&.Common\&.FieldOperation\&.SaveValue(originalAuthor, filePath);

.fi
.PP
 
.PP
To ensure that any sensitive data is removed at the end of a session, the filePath should adhere to the following standards: 
.PD 0
.IP "\(bu" 2
The filename should always start with the \fRcurrentAvatarUser\fP 
.IP "\(bu" 2
The \fRfilePath\fP should be in \fRtnSession\&.TnFramework\&.TemporaryPath\fP 
.PP
.PP
Since the \fRfilePath\fP is user-definable, we will verify that the \fRfilePath\fP doesn't exist before (re)creating it\&. 
.SH "Property Documentation"
.PP 
.SS "string Outpost31\&.Module\&.Common\&.Action\&.Field\&.AssemblyName = Assembly\&.GetExecutingAssembly()\&.GetName()\&.Name\fR [static]\fP, \fR [get]\fP, \fR [set]\fP"

.PP
Assembly name for log files\&. 
.IP "\(bu" 2
Define the assembly name here so it can be used to write log files throughout the class\&. 
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Outpost31 from the source code\&.
